# -*- coding: utf-8 -*-
"""Heart Disease Diagnostic Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FdJtiVt2n7SSDPqu10sGaeUNDQI3MCPI
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data = '/content/Heart Disease data.csv'
data = pd.read_csv('/content/Heart Disease data.csv')
data.head()

data.tail()

data.shape

print("Number of rows",data.shape[0])
print("Number of columnss",data.shape[1])

data.info()

data.isnull().sum()

data_dup = data.duplicated().any()
print(data_dup)

data = data.drop_duplicates()

data.shape

data.info()

data.describe()

plt.figure(figsize=(15,5))
sns.heatmap(data.corr(),annot=True)

data.columns

heart_disease_counts = data['target'].value_counts()
no_heart_disease = heart_disease_counts[0]
heart_disease = heart_disease_counts[1]
print(f"People without heart disease: {no_heart_disease}")
print(f"People with heart disease: {heart_disease}")

plt.figure(figsize=(8, 6))
heart_disease_counts.plot(kind='bar', color=['blue', 'orange'])
plt.title('Heart Disease Diagnosis')
plt.xlabel('Heart Disease')
plt.ylabel('Number of People')
plt.xticks(ticks=[0, 1], labels=['No Heart Disease', 'Heart Disease'], rotation=0)
plt.show()

gender_counts = data['sex'].value_counts()
males = gender_counts[1]
females = gender_counts[0]
print(f"Number of males: {males}")
print(f"Number of females: {females}")

plt.figure(figsize=(8, 6))
gender_counts.plot(kind='bar', color=['blue', 'pink'])
plt.title('Gender Distribution in the Dataset')
plt.xlabel('Gender')
plt.ylabel('Number of People')
plt.xticks(ticks=[0, 1], labels=['Female', 'Male'], rotation=0)
plt.show()

data.columns

sns.countplot(x='sex',hue="target",data=data)
plt.xticks([1,0],['Male','Female'])
plt.legend(labels=['No Disease','Disease'])

sns.displot(data['age'])
plt.show()

chest_pain_counts = data['cp'].value_counts()

plt.figure(figsize=(10, 6))
chest_pain_counts.plot(kind='bar', color='green')
plt.title('Chest Pain Type Distribution')
plt.xlabel('Chest Pain Type')
plt.ylabel('Number of People')
plt.xticks(ticks=[0, 1, 2, 3], labels=['Type 0', 'Type 1', 'Type 2', 'Type 3'], rotation=0)
plt.show()

sns.countplot(x='cp',hue="target",data=data)
plt.legend(labels=['No Disease','Disease'])
plt.show()

sns.countplot(x='fbs',hue="target",data=data)
plt.legend(labels=['No Disease','Disease'])
plt.show()

data['trestbps'].hist()

plt.figure(figsize=(10, 6))
data.boxplot(column='trestbps', by='sex', grid=False)
plt.title('Comparison of Resting Blood Pressure by Sex')
plt.suptitle('')
plt.xlabel('Sex (0 = Female, 1 = Male)')
plt.ylabel('Resting Blood Pressure (trestbps)')
plt.show()

data['chol'].hist()

categorical_values = []
for column in data.columns:
    print('==============================')
    print(f"{column} : {data[column].unique()}")
    if len(data[column].unique()) <= 10:
        categorical_values.append(column)

plt.figure(figsize=(12,  12))
for i, column in enumerate(categorical_values, 1):
    plt.subplot(3, 3, i)
    sns.barplot(x=f"{column}", y='target', data=data)
    plt.ylabel('Possibility to have heart disease')
    plt.xlabel(f'{column}')

